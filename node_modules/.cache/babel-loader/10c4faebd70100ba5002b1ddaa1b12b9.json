{"ast":null,"code":"import _slicedToArray from\"/Users/satishkumar/Desktop/18BCE2017/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'codemirror/lib/codemirror.css';import'codemirror/theme/material.css';import'codemirror/mode/xml/xml';import'codemirror/mode/javascript/javascript';import'codemirror/mode/css/css';import{Controlled as ControlledEditor}from'react-codemirror2';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCompressAlt,faExpandAlt}from'@fortawesome/free-solid-svg-icons';export default function Editor(props){var language=props.language,displayName=props.displayName,value=props.value,onChange=props.onChange;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(editor,data,value){onChange(value);}return/*#__PURE__*/React.createElement(\"div\",{className:\"editor-container \".concat(open?'':'collapsed')},/*#__PURE__*/React.createElement(\"div\",{className:\"editor-title\"},displayName,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"expand-collapse-btn\",onClick:function onClick(){return setOpen(function(prevOpen){return!prevOpen;});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:open?faCompressAlt:faExpandAlt}))),/*#__PURE__*/React.createElement(ControlledEditor,{onBeforeChange:handleChange,value:value,className:\"code-mirror-wrapper\",options:{lineWrapping:true,lint:true,mode:language,theme:'material',lineNumbers:true}}));}","map":{"version":3,"sources":["/Users/satishkumar/Desktop/18BCE2017/src/components/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA,MAAO,yBAAP,CACA,MAAO,uCAAP,CACA,MAAO,yBAAP,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mCAA3C,CAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,IAElCC,CAAAA,QAFkC,CAMhCD,KANgC,CAElCC,QAFkC,CAGlCC,WAHkC,CAMhCF,KANgC,CAGlCE,WAHkC,CAIlCC,KAJkC,CAMhCH,KANgC,CAIlCG,KAJkC,CAKlCC,QALkC,CAMhCJ,KANgC,CAKlCI,QALkC,eAOZX,QAAQ,CAAC,IAAD,CAPI,wCAO7BY,IAP6B,eAOvBC,OAPuB,eASpC,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCN,KAApC,CAA2C,CACzCC,QAAQ,CAACD,KAAD,CAAR,CACD,CAED,mBACE,2BAAK,SAAS,4BAAsBE,IAAI,CAAG,EAAH,CAAQ,WAAlC,CAAd,eACE,2BAAK,SAAS,CAAC,cAAf,EACGH,WADH,cAEE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,qBAFZ,CAGE,OAAO,CAAE,yBAAMI,CAAAA,OAAO,CAAC,SAAAI,QAAQ,QAAI,CAACA,QAAL,EAAT,CAAb,EAHX,eAKE,oBAAC,eAAD,EAAiB,IAAI,CAAEL,IAAI,CAAGR,aAAH,CAAmBC,WAA9C,EALF,CAFF,CADF,cAWE,oBAAC,gBAAD,EACE,cAAc,CAAES,YADlB,CAEE,KAAK,CAAEJ,KAFT,CAGE,SAAS,CAAC,qBAHZ,CAIE,OAAO,CAAE,CACPQ,YAAY,CAAE,IADP,CAEPC,IAAI,CAAE,IAFC,CAGPC,IAAI,CAAEZ,QAHC,CAIPa,KAAK,CAAE,UAJA,CAKPC,WAAW,CAAE,IALN,CAJX,EAXF,CADF,CA2BD","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  const [open, setOpen] = useState(true)\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}